{"version":3,"sources":["components/Cards/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","handleClick","id","alt","name","src","image","Wrapper","children","Title","href","count","highScore","App","state","friends","clickedArray","clicked","displayArray","console","log","JSON","stringify","_this","concat","setState","some","v","indexOf","shuffleCards","b","arr","i","j","temp","length","Math","floor","random","shuffle","this","_this2","components_Wrapper","components_Title","map","friend","Cards","key","occupation","location","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0e9fc50e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <btn onClick={() => {props.handleClick(props.id)}}>\n            <img alt={props.name} src={props.image} />\n        </btn>\n      </div>\n      <div className=\"content\">\n        <ul>\n\n        </ul>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default FriendCard;\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div className=\"title\">{props.children}\n      <nav className=\"navbar\">\n        <ul>\n            <li className=\"brand\">\n                <a href=\"/\">React Clicky Game</a>\n            </li>\n            <li className=\"\">Click an image to begin!</li>\n            <li>Score: {props.count} | Top Score: {props.highScore}</li>\n        </ul>\n       </nav>\n    \n    <div className=\"row\">\n        <div className=\"col w-100\">\n        <header className=\"header\">\n            <h1>React Clicky Game - Simpsons Edition!</h1>\n            <h2>Click on an image to earn points, but don't click on any image more than once!</h2>\n        </header>\n        </div>\n    </div>\n    </div>\n  )}\n\nexport default Title;\n\n\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/Cards\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clickedArray: [],\n    count: 0,\n    highScore: 0,\n    clicked: [],\n    displayArray: []\n  };\n\n  handleClick = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    // const friends = this.state.friends.filter(friend => friend.id !== id);\n      console.log(\"Before click: \" + JSON.stringify(this.state.clicked));\n\n    let clicked = this.state.clicked.concat(id);\n\n      console.log(\"ID: \" + id);\n    \n    // Set this.state.friends equal to the new friends array\n    // this.setState({ friends }); \n    \n    this.setState({ clicked: clicked });\n\n      console.log(\"Current click: \" + JSON.stringify(clicked));\n\n      console.log(\"Clicked Array before new set state: \" + JSON.stringify(this.state.clickedArray));\n      \n      console.log(\"Clicked check result: \" + clicked.some(v=> this.state.clickedArray.indexOf(v) !== -1))\n\n      if (clicked.some(v=> this.state.clickedArray.indexOf(v) !== -1) &&      (this.state.count > this.state.highScore)) {\n          this.setState({ highScore: this.state.count });\n          this.setState({ count: 0 });\n          this.setState({ clickedArray: [] });\n          this.setState({ clicked: [] });\n        return;\n      } else if (clicked.some(v=> this.state.clickedArray.indexOf(v) !== -1)) {\n          this.setState({ count: 0 });\n          this.setState({ clickedArray: [] });\n          this.setState({ clicked: [] });\n          return;\n      } else {\n          this.setState({ count: this.state.count + 1 });\n          // shuffle function\n          this.shuffleCards()\n      }\n  \n    const clickedArray = this.state.clickedArray.concat(id);\n    // Reset the clicked array to empty after\n    this.setState({ clickedArray: clickedArray });\n\n      console.log(\"Clicked Array: \" + JSON.stringify(clickedArray));\n\n    this.setState({ clicked: [] });\n\n      console.log(\"After null: \" + JSON.stringify(clicked));\n      console.log(\"----------------------------------\");\n    \n  };\n\n  // updateScore = id => {\n  //   let clicked = this.state.clickedArray.concat(this.id);\n\n  //   console.log(\"Clicked: \" + clicked);\n  //   this.setState({ count: this.state.count + 1 });  \n\n  // }\n\n  shuffleCards = () => {\n        let a = this.state.friends;\n        let b = shuffle(a);\n        \n        function shuffle(arr) {\n          let i,\n              j,\n              temp;\n          for (i = arr.length - 1; i > 0; i--) {\n              j = Math.floor(Math.random() * (i + 1));\n              temp = arr[i];\n              arr[i] = arr[j];\n              arr[j] = temp;\n          }\n          return arr;    \n      };\n      console.log(\"Array b: \" + JSON.stringify(b));\n      // this.setState({ displayArray: b });\n      //console.log(JSON.stringify(this.state.displayArray));\n  };\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  componentDidMount() {\n    // this.handleClick();\n    this.shuffleCards();\n  }\n  render() {\n    return (\n      <Wrapper>\n        <Title count={this.state.count} highScore={this.state.highScore}></Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            handleClick={this.handleClick}\n            // updateScore={this.updateScore} \n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}